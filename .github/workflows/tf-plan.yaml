name: "Terraform Plan"

on:
  workflow_dispatch:
  push:
    branches: ['master' , 'main']
  pull_request:
    branches: ['master', 'main']

permissions:
    contents: write

env:
 # verbosity setting for Terraform logs
  TF_LOG: INFO
  TF_CLOUD_ORGANIZATION: "k4scloud"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "jenkins-infra"
  CONFIG_DIRECTORY: "./terraform/tf-ec2-jenkins"

jobs:
  plan:
    if: github.repository != 'git@github.com:alchemistkay/django-devops-ci-cd.git'
    name: "Terraform Plan"
    runs-on: ubuntu-latest

    defaults:
     run:

      shell: bash
      # We keep Terraform files in the terraform directory.
      working-directory: ./terraform/tf-ec2-jenkins
    
    permissions:
      # so GitHub can check out this repo using the default github.token
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # - name: Upload Configuration
      #   uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      #   id: plan-upload
      #   with:
      #     workspace: ${{ env.TF_WORKSPACE }}
      #     directory: ${{ env.CONFIG_DIRECTORY }}
      #     speculative: true

      # - name: Create Plan Run
      #   uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      #   id: plan-run
      #   with:
      #     workspace: ${{ env.TF_WORKSPACE }}
      #     configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
      #     plan_only: true

      # - name: Get Plan Output
      #   uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
      #   id: plan-output
      #   with:
      #     plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init
      
      - name: Terraform Format
        run: |
          terraform fmt
      
      - name: Terraform Plan
        run: |
          terraform plan

      - run: echo "üçè The job's status is ${{ job.status }}."