name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  TF_CLOUD_ORGANIZATION: "k4scloud"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "jenkins-infra"
  CONFIG_DIRECTORY: "./terraform/tf-ec2-jenkins"


jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions: # granular permissions
      # so GitHub can check out this repo using the default github.token
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Fetch EC2 Public IP
        id: get-ip
        run: |
          echo "Fetching EC2 Public IP from Terraform Cloud..."
          for i in {1..10}; do
            OUTPUTS=$(curl -s --header "Authorization: Bearer $TF_API_TOKEN" \
            https://app.terraform.io/api/v2/workspaces/${{ env.TF_WORKSPACE }}/current-state-version | \
            jq -r '.data.attributes.outputs.ec2_public_ip.value')

            if [[ "$OUTPUTS" != "null" && "$OUTPUTS" != "" ]]; then
              echo "EC2_PUBLIC_IP=$OUTPUTS" >> $GITHUB_ENV
              echo "EC2 Public IP found: $OUTPUTS"
              exit 0
            fi

            echo "EC2 Public IP not yet available. Retrying in 10 seconds..."
            sleep 10
          done

          echo "Error: EC2 Public IP could not be retrieved from Terraform Cloud"
          exit 1
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}